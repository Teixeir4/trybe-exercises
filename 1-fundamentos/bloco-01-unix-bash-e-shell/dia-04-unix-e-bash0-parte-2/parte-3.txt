1. Liste todos os processos;

```jsx
ps
```

1. Agora use o comando [sleep](https://linux.die.net/man/3/sleep) `30` [&](https://linuxhandbook.com/run-process-background/) ;

```jsx
sleep 30 &
[1] 23132
```

1. Use a listagem de processos para encontrar o PID do processo que está executando o comando `sleep 30` e termine a sua execução ~~(mate o processo)~~ ;

```jsx
kill 23132
```

1. Execute novamente o comando `sleep 30` , mas agora sem o `&` . Depois, faça com que ele continue executando em background;

```jsx
sleep 30
Ctrl + Z
bg %1
```

1. Crie um processo em background que rode o comando `sleep` por 300 segundos.

```jsx
sleep 300 &
[1] 23213
```

1. Crie mais dois processos que rodem o comando `sleep` por 200 e 100 segundos, respectivamente.

> Você deve criá-los em foreground (sem usar o & ) e suspendê-los (apertando ctrl+z ) após cada um começar a executar.
> 

```jsx
sleep 200
Ctrl + Z
sleep 100
Ctrl + Z
```

1. Verifique que apenas o processo `sleep 300` está em execução com o comando `jobs` . Suspenda a execução desse processo.
    
    > Você vai precisar trazer o processo para foreground ( fg ) e suspendê-lo ( ctrl+z ), ou enviar um sinal.
    > 
    
    ```jsx
    $ jobs
    [1]   Executando              sleep 300 &
    [2]-  Parado                  sleep 200
    [3]+  Parado                  sleep 100
    fg %1
    Ctrl + Z
    ```
    
2. Retome a execução do processo `sleep 100` em background com o comando `bg` .

```jsx
bg %3
```

1. Termine a execução de todos os processos `sleep` ~~(mate os processos)~~ .

```jsx
kill %1 %2
```

---
